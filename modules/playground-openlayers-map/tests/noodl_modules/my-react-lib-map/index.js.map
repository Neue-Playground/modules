{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/rbush/rbush.min.js","webpack:///./src/index.js","webpack:///./node_modules/@noodl/noodl-sdk/index.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/console.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/color-space/rgb.js","webpack:///./node_modules/color-space/xyz.js","webpack:///./node_modules/color-space/luv.js","webpack:///./node_modules/color-space/lchuv.js","webpack:///./node_modules/color-parse/node_modules/color-name/index.js","webpack:///./node_modules/color-parse/index.js","webpack:///./node_modules/color-space/hsl.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/color-rgba/index.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./node_modules/ol/expr/expression.js","webpack:///./node_modules/ol/expr/cpu.js","webpack:///./node_modules/ol/render/canvas/style.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/Key.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/defaults.js","webpack:///./node_modules/ol/interaction/defaults.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/render/canvas/ZIndexContext.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/DataTile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/DataTile.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/uri.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/linechunk.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/render/canvas/hitdetect.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/render/Feature.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./src/OpenLayersMap.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","_typeof","define","this","e","h","arguments","length","undefined","a","Math","log","exp","sqrt","max","floor","min","indexOf","children","minX","minY","maxX","maxY","leaf","f","u","height","x","pop","ceil","push","_createClass","_class","_classCallCheck","_maxEntries","_minEntries","clear","_all","data","toBBox","insert","_build","slice","_splitRoot","_insert","splice","_condense","apply","_toConsumableArray","pow","compareMinX","compareMinY","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","_allDistMargin","sort","Noodl","require","OpenLayersMap","MyCustomReactComponentNode","defineReactNode","category","getReactComponent","inputProps","isInteractive","displayName","group","type","default","zoom","longitude","latitude","pins","label","description","pointA","pointB","outputProps","onPinClicked","onMapClick","onViewChange","defineModule","reactNodes","nodes","setup","_colors","defineNode","def","_def","displayNodeName","usePortAsLabel","useInputAsLabel","color","getInspectInfo","docs","initialize","inputs","_outputs","outputs","_this","setOutputs","flagOutputDirty","clearWarnings","context","editorConnection","nodeScope","componentOwner","id","sendWarning","message","set","_key","changed","signals","valueChangedToTrue","_this2","_fn","signal","scheduleAfterInputsHaveUpdated","methods","prototypeExtensions","onNodeDeleted","_onNodeDeleted","__proto__","node","defineCollectionNode","assign","Items","Fetch","sendSignalOnOutput","fetch","defineModelNode","Id","Fetched","_this3","_object","_changeListener","off","_o","on","properties","inputCss","frame","content","options","transform","locals","useSourceMap","list","toString","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","fn","memo","stylesInDom","isOldIE","window","document","all","atob","getTarget","target","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","createStyleElement","createElement","attrs","nonce","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","BaseEvent","propagationStopped","defaultPrevented","Disposable","disposed","disposeInternal","ascending","b","linearFindNearest","arr","direction","candidate","reverseSubArray","begin","end","tmp","extend","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","toPromise","err","Promise","reject","resolve","promiseGetter","isEmpty","Target","_Disposable","_callSuper","eventTarget_","pendingRemovals_","dispatching_","listeners_","_inherits","listener","listeners","listenersForType","includes","event","isString","evt","Event","propagate","dispatching","pendingRemovals","ii","handleEvent","pr","removeEventListener","listen","thisArg","once","originalListener","eventsKey","addEventListener","listenOnce","unlistenByKey","Observable","_EventTarget","onInternal","onceInternal","un","unInternal","revision_","dispatchEvent","EventType","len","ol_key","unByKey","EventTarget","abstract","uidCounter_","getUid","ol_uid","String","ObjectEvent","_Event","oldValue","BaseObject","_Observable","values","values_","setProperties","eventType","hasListener","ObjectEventType","silent","notify","CENTER","RESOLUTION","ROTATION","METERS_PER_UNIT","PI","Projection","code_","code","units_","units","extent_","extent","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","tileGrid","func","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","_Projection","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","stride","_stride","y","toEPSG4326","_stride2","atan","EPSG4326Projection","cache","transforms","add","destination","transformFn","sourceCode","getCode","destinationCode","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","size","_getRotatedViewport2","_slicedToArray","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getRotatedViewport","x0","y0","x1","y1","x2","y2","x3","y3","getIntersection","intersection","intersects","applyTransform","stops","width","xs","ys","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","wrapAndSliceX","multiWorld","isFinite","clamp","squaredSegmentDistance","squaredDistance","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","worldsAway","getWorldsAway","sourceExtentWidth","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","levels","info","warn","error","none","level","_console2","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","pointResolution","getPointResolutionFunc","getUnits","getMetersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","toLonLat","lonLat","lon","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","projections2","forwardTransform","inverseTransform","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","assert","assertion","errorMessage","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","linear","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","matrixPrecision","transform2D","destinationStride","k","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","getStrideForLayout","layout","SimpleGeometry","_Geometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","getFlatCoordinates","nesting","getLayoutForStride","startsWith","getStride","scale","translate","_BaseObject","Geometry","extentRevision_","simplifyTransformedInternal","revision","getSimplifiedGeometry","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","closestPointXY","computeExtent","isNaN","returnOrUpdate","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","composeTransform","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","_SimpleGeometry","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","linearRingArea","setLayout","Point","applyProperties","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","abs","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","inflateEnds","startOrientation","prevEndIndex","orientation","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","polygon","getOrientedFlatCoordinates","linearRingsArea","flatCenter","getFlatInteriorPoint","fromExtent","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","defaultMaxZoom","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationNone","theta","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","newOptions","getProperties","getZoom","getRotation","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","state","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","w","hints","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","getUpdatedOptions_","enabled","getResolutionForExtentInternal","getConstrainedResolution","logPower","reducedSize","nextCenter","nextResolution","nextRotation","viewState","getState","calculateExtent","nearest","baseLevel","geometryOrExtent","geometry","polygonFromExtent","getType","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","rotatedExtentForGeometry","centerRot","centerX","centerY","getConstrainedCenter","centerOnInternal","shiftedCenter","deltaCoordinates","setCenter","adjustResolutionInternal","getInteracting","newResolution","adjustResolution","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","calculateCenterShift","cancelAnimations","resolutionDirection","endInteractionInternal","targetZoom","targetRes","Property","CollectionEvent","element","Collection","array","unique_","unique","array_","assertUnique_","updateLength_","getLength","elem","CollectionEventType","removeAt","prev","except","BaseLayer","background_","background","LayerProperty","opacity","visible","zIndex","className_","className","state_","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","states","zindex","inView","layerState","Layer","_BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","addChangeListener","handleSourcePropertyChange_","setSource","getLayerState","getSource","handleSourceChange_","pixel","getFeatures","getData","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","getLayerStatesArray","find","layerExtent","_this$getSource","isVisible","getAttributions","attributions","getViewStateAndExtent","layerRenderer","getRenderer","prepareFrame","renderFrame","renderDeferred","unrender","_this4","RenderEventType","some","arrayLayerState","createRenderer","dispose","hasArea","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","pixelRatio","channel","alias","xyz","2","A","C","D50","D55","D65","D75","F2","F7","F11","E","10","whitepoint","rgb","_xyz","white","g","arg","_u","_v","v","xn","yn","zn","luv","vn","yr","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","parse","cstr","space","alpha","toLowerCase","names","parseInt","exec","dims","split","shift","parseFloat","baseHues","endsWith","_cstr$match","match","hsl","t1","t2","t3","NO_COLOR","cacheSize","withAlpha","rgbaToLcha","fromString","raw","Number","parsed","parseRgba","_step","_iterator","_createForOfIteratorHelper","done","normalize","asArray","sharedCanvasContext","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","createCanvasContext2D","canvasPool","settings","canvas","getContext","getSharedCanvasContext2D","releaseCanvas","clearRect","outerWidth","offsetWidth","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","replaceChild","removeChildren","lastChild","decodeFallback","image","src","then","handleLoad","unlisten","handleError","load","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","iconImage","crossOrigin","getCacheKey","pattern","getImageState","ImageState","ready","createPattern","getImage","maxCacheSize","expire","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","initializeImage_","replaceColor_","isTainted_","fillRect","handleImageError_","HTMLImageElement","handleImageLoad_","ctx","globalCompositeOperation","fillStyle","onChange","cacheKey","iconImageCache","getPattern","asColorLike","iconCache","canvasPattern","patternCanvasContext","getIconImage","asCanvasPattern","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","measureFont","measureElement","defaultLineDash","defaultPadding","checkedFonts","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","getKeys","font","_font$split2","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","body","measureAndCacheTextWidth","reduce","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","RegularShape","_ImageStyle","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","setOpacity","getScaleArray","createHitDetectionCanvas_","renderOptions","draw_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","strokeStyle","_this$stroke_$getColo","_this$stroke_$getWidt","_this$stroke_$getLine","_this$stroke_$getLine2","_this$stroke_$getLine3","_this$stroke_$getMite","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","calculateLineJoinSize_","maxRadius","createRenderOptions","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","CircleStyle","_RegularShape","Fill","patternImage_","setColor","patternImage","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","_geometry","_this$getRenderer","getGeometry","getText","feature","defaultStyles","createDefaultStyle","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","_options$size","onload","unlistenImageChange","imageSize","getSize","setScale","listenImageChange","_possibleConstructorReturn","getSrc","getPixelRatio","getHitDetectionImage","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","_defineProperty","namedTypes","typeName","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","_len","newParsingContext","variables","Set","featureId","geometryType","encoded","expectedType","colorFromString","returnType","parser","parsers","parseCallExpression","_step2","_iterator2","Ops","_parsers","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","interpolationType","interpolation","stop","operation","argCount","condition","needleType","haystack","colors","parsedColors","minArgs","maxArgs","plural","range","expression","argType","_len2","validators","_key2","_construct","buildExpression","compileExpression","colorValue","compileAssertionExpression","hasOwn","compileAccessorExpression","_ref","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","styleEvaluator","buildRuleSet","evaluationContext","getPropertiesInternal","getId","computeGeometryType","substring","getGeometries","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","setPlacement","setRepeat","setRotateWithView","setTextAlign","setJustify","setTextBaseline","setPadding","buildText","evaluateImage","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","setDisplacement","setAnchor","buildIcon","requireNumber","shape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","empty","setImage","setZIndex","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","setWidth","setLineCap","setLineJoin","setLineDashOffset","setMiterLimit","requireSize","requireSizeLike","BaseVectorLayer","_Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","declutterGroup","getDeclutter","RBush","renderDeclutter","renderOrder","styleLike","toStyleLike","styleFunction","toStyleFunction","expireIconCache","MapRenderer","map_","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","hasRenderer","getWrapX","order","distanceSq","postRenderFunctions","RenderEvent","inversePixelTransform","CompositeMapRenderer","_MapRenderer","fontChangeListenerKey_","redrawText","element_","CLASS_UNSELECTABLE","container","getViewport","children_","renderedVisible_","getMap","calculateMatrices2D","dispatchRenderEvent","renderedLayerStates","previousElement","layerIndex","sourceState","getSourceState","oldChildren","oldChild","newChild","replaceChildren","scheduleExpireIconCache","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","getArray","registerLayerListeners_","listenerKeys","handleLayerChange_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","getLayersArray","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","_MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","_superPropGet","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","_Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","pointerId","updateActivePointers_","isMouseActionButton_","emulateClick_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","cancelable","clientX","clientY","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","TileState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","Control","pointerEvents","target_","setTarget","_this$element","_this$element2","_this$target_","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","_regeneratorRuntime","iterator","asyncIterator","configurable","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isGeneratorFunction","constructor","mark","setPrototypeOf","awrap","async","reverse","charAt","rval","handle","finish","delegateYield","asyncGeneratorStep","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","_getPrototypeOf","ReferenceError","_assertThisInitialized","valueOf","Reflect","construct","_isNativeReflectConstruct","_setPrototypeOf","Attribution","_Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","title","handleClick_","cssClasses","renderedAttributions_","getAllLayers","visibleAttributions","flatMap","_layer$getSource","getAttributionsCollapsible","setCollapsible","from","_callee","_context","collectSourceAttributions_","attribution","_updateElement_","_next","_throw","_x","handleToggle_","classList","toggle","updateElement_","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","animate","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","getConstrainedZoom","zoomByDelta","Interaction","setActive","InteractionProperty","mapBrowserEvent","active","DoubleClickZoom","_Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","updateTrackedPointers_","handledUp","handled","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","targetElement","getTargetElement","rootNode","ShadowRoot","hasAttribute","activeElement","focus","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","_PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","adjustCenterInternal","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","endInteraction","DragRotate","lastAngle_","getConstraints","RenderBox","startPixel_","endPixel_","startPixel","endPixel","top","getOverlayContainer","createOrUpdateGeometry","render_","DragBoxEventType","DragBoxEvent","DragZoom","_DragBox","minArea","out_","out","DragBox","_options","_options$minArea","_options$condition","_options$boxEndCondit","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","setPixels","completeBox","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","KeyboardZoom","platformModifierKey","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","removeLayerMapProperty","setMapInternal","Map","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attributionOptions","defaultControls","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","getControls","getInteractions","setLayerMapProperty","overlay","getOverlays","disconnect","features","forEachFeatureAtPixel","addLayersFrom","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","getActive","tileQueue","viewHints","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","unobserve","setSize","targetRoot","observe","updateViewportSize_","handleViewPropertyChanged_","handleLayerAdd_","handleLayerRemove_","renderFrame_","handleFontsChanged","previousFrameState","getHints","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","getLoadingOrNotReady","handlePostRender","oldLayerGroup","computedStyle","getClientRects","oldSize","setViewportSize","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","unshift","renderIfReadyAndVisible","getLayer","ZIndexContext","instructions_","context_","Proxy","pushMethodArgs_","instructionsAtIndex","instructionAtIndex","pixelContext","CanvasLayerRenderer","_LayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","getBackground","backgroundColor","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","canvasTransform","toTransformString","useContainer","dispatchRenderEvent_","draw","renderDeferredInternal","Tile","tileCoord","transition_","transition","transitionStarts_","interpolate","setState","asImageLike","HTMLVideoElement","ImageBitmap","disposedError","sharedContext","defaultSize","DataTile","_Tile","loader_","loader","data_","error_","controller_","controller","imageData","abort","ImageTile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","entry","value_","key_","newer","older","_this$entries_$key","brokenDiagonalRendering_","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","stitchContext","sourceDataExtent","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","steps","ReprojDataTile","_DataTile","Uint8ClampedArray","gutter_","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","sourceTileGrid","targetTileGrid_","targetTileGrid","wrappedTileCoord_","wrappedTileCoord","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceTileGridExtent","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","errorThresholdInPixels","triangulation_","getZForResolution","calculateSourceExtent","sourceRange","getTileRangeForExtentAndZ","getTile","getTileFunction","srcX","srcY","dataSources","imageLike","_this2$clipExtent_","tileData","arrayData","Uint8Array","Float32Array","DataView","asArrayLike","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","dataR","dataU","getTileSize","targetWidth","targetHeight","reproj","dataSource","createImageData","putImageData","renderReprojected","ImageData","leftToLoad","sourceListenKey","unlistenSources_","reproject_","_ref2","ReprojTile","renderEdges_","TileRange","tileRange","getKeyZXY","hashZXY","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","getRenderExtent","getRenderSource","gridExtent","getTileGridForProjection","CanvasTileLayerRenderer","_CanvasLayerRenderer","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","createTileCoord","tileCache_","tileCache","tileSource","containsKey","getOrCreateTile","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getGutterForProjection","sourceRevision","renderedRevision_","initialZ","minZ","zDirection","tileQueueKey","enqueue","getTileCoordCenter","staleKeys","getStaleKeys","endTransition","altZ","getTileRangeForTileCoordAndZ","covered","viewResolution","viewCenter","prependStaleKey","frameExtent","prepareContainer","canvasExtent","getPreload","targetZ","enqueueTiles","renderExtent","uid","tileState","getAlpha","findStaleTile_","findAltTiles_","parentZ","canvasScale","getRenderContext","clipUnrotated","getInterpolate","preRender","currentClip","zs","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","postRender","tilesCount","updateCacheSize","expireCache","tileCount","getTileImage","alphaChanged","TileLayer","_BaseTileLayer","getCacheSize","TileCache","_LRUCache","release","peekLast","fromKey","peekFirstKey","adaptAttributions","attributionLike","Source","_options$attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","tmpTileCoord","TileGrid","strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","tempTileRange","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","viewport","fullTileRanges","getForProjection","getDefaultTileGrid","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","setDefaultTileGrid","half","TileSource","_Source","tilePixelRatio_","tmpSize","tileOptions","getTileCacheForProjection","getResolutions","getFullTileRange","withinExtentAndZ","TileSourceEvent","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","defaultTileLoadFunction","imageTile","OSM","_XYZ","url","reprojectionErrorThreshold","_TileImage","XYZ","xyzOptions","gridOptions","createXYZ","tileUrlFunction","urls","_UrlTile","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","getTileInternal","tileCoordKey","newTile","createTile_","tilegrid","proj","_TileSource","UrlTile","generateTileUrlFunction_","setUrls","setUrl","tileLoadingKeys_","TileEventType","pruneExceptNewestZ","setKey","charCode","startCharCode","charCodeAt","stopCharCode","fromCharCode","expandUrl","setTileUrlFunction","Feature","geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","hasProperties","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","removeChangeListener","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","imageStyle","declutterImageWithText","textStyle","CanvasBuilder","_VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","getBufferedMaxExtent","myEnd","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","builderEnds","builderEnd","appendFlatLineCoordinates","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","drawCustomCoordinates_","CanvasInstruction","getEnds","appendFlatPointCoordinates","endGeometry","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","_CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","reverseHitDetectionInstructions","sharedData","getAnchor","CanvasLineStringBuilder","moveToLineToInstruction","updateStrokeStyle","drawFlatCoordinates_","lastStroke","CanvasPolygonBuilder","numEnds","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","updateFillStyle","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","_currentChunk$slice2","missing","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","acos","TEXT_ALIGN","BATCH_CONSTRUCTORS","Builder","ImageBuilder","LineStringBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","saveTextStates_","setFillStrokeStyle","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","lineStringLength","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","_getTextDimensions","baseStyle","widths","heights","lineWidths","currentWidth","currentHeight","getTextDimensions","renderWidth","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","setStrokeStyle_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","replayTextBackground_","alignAndScale","repeatSize","createLabel","featureCallback","hitExtent","declutterTree","pixelCoordinates","transform1","transform2","zIndexContext","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","labelWithAnchor","drawLabelWithPointPlacement_","widthIndex","calculateImageOrLabelDimensions_","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","collides","replayImageOrLabel_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","execute_","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","executor","executeHitDetection","targetContext","builderTypes","maxBuilderTypes","_loop","getZIndexContext","requireClip","pushFunction","execute","deferredZIndexContexts","CanvasImmediateRenderer","userTransform","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","localTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveToLineTo_","simplifyTransformed","simpleGeometry","transformGeom2D","drawText_","setImageStyle","setTextStyle","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","drawGeometry","geometries","getGeometriesArray","drawImages_","flatMidpoint","geometryExtent","flatMidpoints","drawRings_","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","getBuilder","textReplay","drawText","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","drawCustom","getHitDetectionRenderer","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","executorGroup","declutterable","vectorSource","endWorld","world","getRenderTransform","renderWorlds","resetDrawContext_","setDrawContext_","intersectsExtent","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","setTransform","createHitDetectionImageData","getSquaredRenderTolerance","resultFeatures","hitDetect","lastIndexOf","executorGroups","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","_BaseVectorLayer","maxEntries","rbush_","RBush_","items_","extents","items","bbox","search","forEach_","getAll","getInExtent","toJSON","rbush","interpolatePoint","cumulativeLengths","needle","comparator","mid","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","LineString","flatMidpoint_","flatMidpointRevision_","lineString","_this$flatMidpoint_","getCoordinateAt","linearRingss","RenderFeature","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","linearRingssCenter","midpoint","_this$ends_","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","status","responseText","responseXML","response","readFeatures","featureProjection","readProjection","_unused","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","VectorSource","format_","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","addFeature","removeFeature","fast","removeFeatureInternal","clearEvent","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureAtCoordinateDirect","_this5","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","removeFromIdIndex_","_this6","loadedExtentsRtree","extentsToLoad","extentToLoad","removed","featureChangeKeys","idString","setLoader","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","getPosition","isRendered","getPixelFromCoordinate","mapSize","updateRenderedPosition","setVisible","getOffset","getPositioning","posX","posY","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","_unsupportedIterableToArray","_nonIterableRest","props","mapRef","useRef","popupRef","useEffect","current","addLayer","addOverlay","pin","hasFeatureAtPixel","hoveredFeature","getFeaturesAtPixel","getCoordinates","clickedFeature","_toLonLat2","lat","fetchRoute","routeCoordinates","routeFeature","json","routes","_x2","ref","borderRadius"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = React;","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).RBush=i()}(this,(function(){\"use strict\";function t(e,h,r=0,s=e.length-1,a=n){for(;s>r;){if(s-r>600){const i=s-r+1,n=h-r+1,o=Math.log(i),l=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*l*(i-l)/i)*(n-i/2<0?-1:1);t(e,h,Math.max(r,Math.floor(h-n*l/i+c)),Math.min(s,Math.floor(h+(i-n)*l/i+c)),a)}const n=e[h];let o=r,l=s;for(i(e,r,h),a(e[s],n)>0&&i(e,r,s);o<l;){for(i(e,o,l),o++,l--;a(e[o],n)<0;)o++;for(;a(e[l],n)>0;)l--}0===a(e[r],n)?i(e,r,l):(l++,i(e,l,s)),l<=h&&(r=l+1),h<=l&&(s=l-1)}}function i(t,i,n){const e=t[i];t[i]=t[n],t[n]=e}function n(t,i){return t<i?-1:t>i?1:0}function e(t,i,n){if(!n)return i.indexOf(t);for(let e=0;e<i.length;e++)if(n(t,i[e]))return e;return-1}function h(t,i){r(t,0,t.children.length,i,t)}function r(t,i,n,e,h){h||(h=d(null)),h.minX=1/0,h.minY=1/0,h.maxX=-1/0,h.maxY=-1/0;for(let r=i;r<n;r++){const i=t.children[r];s(h,t.leaf?e(i):i)}return h}function s(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function a(t,i){return t.minX-i.minX}function o(t,i){return t.minY-i.minY}function l(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function c(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){const n=Math.max(t.minX,i.minX),e=Math.max(t.minY,i.minY),h=Math.min(t.maxX,i.maxX),r=Math.min(t.maxY,i.maxY);return Math.max(0,h-n)*Math.max(0,r-e)}function f(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function u(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function d(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function x(i,n,e,h,r){const s=[n,e];for(;s.length;){if((e=s.pop())-(n=s.pop())<=h)continue;const a=n+Math.ceil((e-n)/h/2)*h;t(i,a,n,e,r),s.push(n,a,a,e)}}return class{constructor(t=9){this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}all(){return this._all(this.data,[])}search(t){let i=this.data;const n=[];if(!u(t,i))return n;const e=this.toBBox,h=[];for(;i;){for(let r=0;r<i.children.length;r++){const s=i.children[r],a=i.leaf?e(s):s;u(t,a)&&(i.leaf?n.push(s):f(t,a)?this._all(s,n):h.push(s))}i=h.pop()}return n}collides(t){let i=this.data;if(!u(t,i))return!1;const n=[];for(;i;){for(let e=0;e<i.children.length;e++){const h=i.children[e],r=i.leaf?this.toBBox(h):h;if(u(t,r)){if(i.leaf||f(t,r))return!0;n.push(h)}}i=n.pop()}return!1}load(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(let i=0;i<t.length;i++)this.insert(t[i]);return this}let i=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===i.height)this._splitRoot(this.data,i);else{if(this.data.height<i.height){const t=this.data;this.data=i,i=t}this._insert(i,this.data.height-i.height-1,!0)}else this.data=i;return this}insert(t){return t&&this._insert(t,this.data.height-1),this}clear(){return this.data=d([]),this}remove(t,i){if(!t)return this;let n=this.data;const h=this.toBBox(t),r=[],s=[];let a,o,l;for(;n||r.length;){if(n||(n=r.pop(),o=r[r.length-1],a=s.pop(),l=!0),n.leaf){const h=e(t,n.children,i);if(-1!==h)return n.children.splice(h,1),r.push(n),this._condense(r),this}l||n.leaf||!f(n,h)?o?(a++,n=o.children[a],l=!1):n=null:(r.push(n),s.push(a),a=0,o=n,n=n.children[0])}return this}toBBox(t){return t}compareMinX(t,i){return t.minX-i.minX}compareMinY(t,i){return t.minY-i.minY}toJSON(){return this.data}fromJSON(t){return this.data=t,this}_all(t,i){const n=[];for(;t;)t.leaf?i.push(...t.children):n.push(...t.children),t=n.pop();return i}_build(t,i,n,e){const r=n-i+1;let s,a=this._maxEntries;if(r<=a)return s=d(t.slice(i,n+1)),h(s,this.toBBox),s;e||(e=Math.ceil(Math.log(r)/Math.log(a)),a=Math.ceil(r/Math.pow(a,e-1))),s=d([]),s.leaf=!1,s.height=e;const o=Math.ceil(r/a),l=o*Math.ceil(Math.sqrt(a));x(t,i,n,l,this.compareMinX);for(let h=i;h<=n;h+=l){const i=Math.min(h+l-1,n);x(t,h,i,o,this.compareMinY);for(let n=h;n<=i;n+=o){const h=Math.min(n+o-1,i);s.children.push(this._build(t,n,h,e-1))}}return h(s,this.toBBox),s}_chooseSubtree(t,i,n,e){for(;e.push(i),!i.leaf&&e.length-1!==n;){let n,e=1/0,s=1/0;for(let a=0;a<i.children.length;a++){const o=i.children[a],c=l(o),m=(h=t,r=o,(Math.max(r.maxX,h.maxX)-Math.min(r.minX,h.minX))*(Math.max(r.maxY,h.maxY)-Math.min(r.minY,h.minY))-c);m<s?(s=m,e=c<e?c:e,n=o):m===s&&c<e&&(e=c,n=o)}i=n||i.children[0]}var h,r;return i}_insert(t,i,n){const e=n?t:this.toBBox(t),h=[],r=this._chooseSubtree(e,this.data,i,h);for(r.children.push(t),s(r,e);i>=0&&h[i].children.length>this._maxEntries;)this._split(h,i),i--;this._adjustParentBBoxes(e,h,i)}_split(t,i){const n=t[i],e=n.children.length,r=this._minEntries;this._chooseSplitAxis(n,r,e);const s=this._chooseSplitIndex(n,r,e),a=d(n.children.splice(s,n.children.length-s));a.height=n.height,a.leaf=n.leaf,h(n,this.toBBox),h(a,this.toBBox),i?t[i-1].children.push(a):this._splitRoot(n,a)}_splitRoot(t,i){this.data=d([t,i]),this.data.height=t.height+1,this.data.leaf=!1,h(this.data,this.toBBox)}_chooseSplitIndex(t,i,n){let e,h=1/0,s=1/0;for(let a=i;a<=n-i;a++){const i=r(t,0,a,this.toBBox),o=r(t,a,n,this.toBBox),c=m(i,o),f=l(i)+l(o);c<h?(h=c,e=a,s=f<s?f:s):c===h&&f<s&&(s=f,e=a)}return e||n-i}_chooseSplitAxis(t,i,n){const e=t.leaf?this.compareMinX:a,h=t.leaf?this.compareMinY:o;this._allDistMargin(t,i,n,e)<this._allDistMargin(t,i,n,h)&&t.children.sort(e)}_allDistMargin(t,i,n,e){t.children.sort(e);const h=this.toBBox,a=r(t,0,i,h),o=r(t,n-i,n,h);let l=c(a)+c(o);for(let e=i;e<n-i;e++){const i=t.children[e];s(a,t.leaf?h(i):i),l+=c(a)}for(let e=n-i-1;e>=i;e--){const i=t.children[e];s(o,t.leaf?h(i):i),l+=c(o)}return l}_adjustParentBBoxes(t,i,n){for(let e=n;e>=0;e--)s(i[e],t)}_condense(t){for(let i,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(i=t[n-1].children,i.splice(i.indexOf(t[n]),1)):this.clear():h(t[n],this.toBBox)}}}));\n","const Noodl = require('@noodl/noodl-sdk');\r\nconst { default: OpenLayersMap } = require('./OpenLayersMap');\r\nconst pointA = {\r\n\tlabel: 'Point A',\r\n\tlongitude: 12.4924,\r\n\tlatitude: 41.8902, // Koordinate za Point A (npr. Rim)\r\n};\r\n\r\nconst pointB = {\r\n\tlabel: 'Point B',\r\n\tlongitude: 16.4964,\r\n\tlatitude: 41.9028, // Koordinate za Point B (npr. Rim)\r\n};\r\n\r\nconst MyCustomReactComponentNode = Noodl.defineReactNode({\r\n\tname: 'Map Component',\r\n\tcategory: 'Tutorial',\r\n\tgetReactComponent() {\r\n\t\treturn OpenLayersMap;\r\n\t},\r\n\tinputProps: {\r\n\t\tisInteractive: {\r\n\t\t\tdisplayName: 'Is Interactive',\r\n\t\t\tgroup: 'Interactive',\r\n\t\t\ttype: 'boolean',\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tzoom: {\r\n\t\t\tdisplayName: 'Zoom',\r\n\t\t\tgroup: 'Coordinates',\r\n\t\t\ttype: 'number',\r\n\t\t\tdefault: 2\r\n\t\t},\r\n\t\tlongitude: {\r\n\t\t\tdisplayName: 'Longitude',\r\n\t\t\tgroup: 'Coordinates',\r\n\t\t\ttype: 'number',\r\n\t\t\tdefault: 0\r\n\t\t},\r\n\t\tlatitude: {\r\n\t\t\tdisplayName: 'Latitude',\r\n\t\t\tgroup: 'Coordinates',\r\n\t\t\ttype: 'number',\r\n\t\t\tdefault: 0\r\n\t\t},\r\n\t\tpins: {\r\n\t\t\tdisplayName: 'Pins',\r\n\t\t\tgroup: 'Pins',\r\n\t\t\ttype: 'array',\r\n\t\t\tdefault: [\r\n\t\t\t\t{ label: 'Pin 1', longitude: -0.1276, latitude: 51.5074, description: 'London, UK' },\r\n\t\t\t\t{ label: 'Pin 2', longitude: 2.3522, latitude: 48.8566, description: 'Paris, France' },\r\n\t\t\t\t{ label: 'Pin 3', longitude: 12.4964, latitude: 41.9028, description: 'Rome, Italy' },\r\n\t\t\t]\r\n\t\t},\r\n\t\tpointA: {\r\n\t\t\tdisplayName: 'Point A',\r\n\t\t\tgroup: 'Points',\r\n\t\t\ttype: 'object', // Ispravljeno: koristimo tip 'object'\r\n\t\t\tdefault: {}\r\n\t\t},\r\n\t\tpointB: {\r\n\t\t\tdisplayName: 'Point B',\r\n\t\t\tgroup: 'Points',\r\n\t\t\ttype: 'object', // Ispravljeno: koristimo tip 'object'\r\n\t\t\tdefault: {}\r\n\t\t},\r\n\t},\r\n\toutputProps: {\r\n\t\tonPinClicked: {\r\n\t\t\ttype: 'signal', // Tip za output 'signal' za događaje\r\n\t\t\tdisplayName: 'On Pin Clicked'\r\n\t\t},\r\n\t\tonMapClick: {\r\n\t\t\ttype: 'signal',\r\n\t\t\tdisplayName: 'On Map Clicked'\r\n\t\t},\r\n\t\tonViewChange: {\r\n\t\t\ttype: 'signal',\r\n\t\t\tdisplayName: 'On View Change'\r\n\t\t},\r\n\t}\r\n});\r\n\r\nNoodl.defineModule({\r\n\treactNodes: [\r\n\t\tMyCustomReactComponentNode\r\n\t],\r\n\tnodes: [],\r\n\tsetup() {\r\n\t\t//this is called once on startup\r\n\t}\r\n});\r\n","const _colors = {\n    \"purple\":\"component\",\n    \"green\":\"data\",\n    \"default\":\"default\",\n    \"grey\":\"default\"\n}\n\nNoodl.defineNode = function(def) {\n    const _def = {};\n\n    _def.name = def.name;\n    _def.displayNodeName = def.displayName;\n    _def.usePortAsLabel = def.useInputAsLabel;\n    _def.color = _colors[def.color || 'default'];\n    _def.category = def.category || 'Modules';\n    _def.getInspectInfo = def.getInspectInfo;\n    _def.docs = def.docs;\n    \n    _def.initialize = function() {\n        this.inputs = {};\n        var _outputs = this.outputs = {};\n        var _this = this;\n\n        // Function for quickly setting outputs\n        this.setOutputs = function(o) {\n            for(var key in o) {\n                _outputs[key] = o[key];\n                _this.flagOutputDirty(key);\n            }\n        }\n\n        // Sending warnings\n        this.clearWarnings = (function() {\n            if(this.context.editorConnection && this.nodeScope && this.nodeScope.componentOwner)\n                this.context.editorConnection.clearWarnings(this.nodeScope.componentOwner.name, this.id);\n        }).bind(this);\n\n        this.sendWarning = (function(name,message) {\n            if(this.context.editorConnection && this.nodeScope && this.nodeScope.componentOwner)\n                this.context.editorConnection.sendWarning(this.nodeScope.componentOwner.name, this.id, name, {\n                    message: message\n                });\n        }).bind(this);\n\n        if(typeof def.initialize === 'function')\n            def.initialize.apply(this);\n    }\n    _def.inputs = {};\n    _def.outputs = {};\n\n    for(var key in def.inputs) {\n        _def.inputs[key] = {\n            type:(typeof def.inputs[key] === 'object')?def.inputs[key].type:def.inputs[key],\n            displayName:(typeof def.inputs[key] === 'object')?def.inputs[key].displayName:undefined,\n            group:(typeof def.inputs[key] === 'object')?def.inputs[key].group:undefined,\n            default:(typeof def.inputs[key] === 'object')?def.inputs[key].default:undefined,\n            set:(function() { const _key = key; return function(value) {\n                this.inputs[_key] = value;\n                if(def.changed && typeof def.changed[_key] === 'function') {\n                    def.changed[_key].apply(this,[value]);\n                }\n            }})()\n        }\n    }\n\n    for(var key in def.signals) {\n        _def.inputs[key] = {\n            type:'signal',\n            displayName:(typeof def.signals[key] === 'object')?def.signals[key].displayName:undefined,\n            group:(typeof def.signals[key] === 'object')?def.signals[key].group:undefined,\n            valueChangedToTrue:(function() { const _key = key; return function() {\n                const _fn = (typeof def.signals[_key] === 'object')?def.signals[_key].signal:def.signals[_key]\n                if(typeof _fn === 'function') {\n                    this.scheduleAfterInputsHaveUpdated(() => {\n                        _fn.apply(this);\n                    }) \n                }\n            }})()\n        }\n    }\n\n    for(var key in def.outputs) {\n        if(def.outputs[key] === 'signal') {\n            _def.outputs[key] = {\n                type:'signal',\n            }\n        }\n        else {\n            _def.outputs[key] = {\n                type:(typeof def.outputs[key] === 'object')?def.outputs[key].type:def.outputs[key],\n                displayName:(typeof def.outputs[key] === 'object')?def.outputs[key].displayName:undefined,\n                group:(typeof def.outputs[key] === 'object')?def.outputs[key].group:undefined,\n                getter:(function() { const _key = key; return function() {\n                    return this.outputs[_key];\n                }})()\n            }\n        }\n    }\n\n    _def.methods = _def.prototypeExtensions = {};\n    for(var key in def.methods) {\n        _def.prototypeExtensions[key] = def.methods[key];\n    }\n    if(_def.methods.onNodeDeleted) { // Override the onNodeDeleted if required\n        _def.methods._onNodeDeleted = function() {\n            this.__proto__.__proto__._onNodeDeleted.call(this);\n            _def.methods.onNodeDeleted.value.call(this);\n        }\n    }\n\n    return {node:_def,setup:def.setup};\n}\n\nNoodl.defineCollectionNode = function(def) {\n    const _def = {\n        name:def.name,\n        category:def.category,\n        color:'data',\n        inputs:def.inputs,\n        outputs:Object.assign({\n            Items:'array',\n            'Fetch Started':'signal',\n            'Fetch Completed':'signal'\n        },def.outputs||{}),\n        signals:Object.assign({\n            Fetch:function() {\n                var _this = this;\n                this.sendSignalOnOutput('Fetch Started');\n                var a = def.fetch.call(this,function() {\n                    _this.sendSignalOnOutput('Fetch Completed');\n                });\n                this.setOutputs({\n                    Items:a\n                })\n            }\n        },def.signals||{})\n    }\n\n    return Noodl.defineNode(_def);\n}\n\nNoodl.defineModelNode = function(def) {\n    const _def = {\n        name:def.name,\n        category:def.category,\n        color:'data',\n        inputs:{\n            Id:'string'\n        },\n        outputs:{\n            Fetched:'signal'\n        },\n        changed:{\n            Id:function(value) {\n                if(this._object && this._changeListener)\n                    this._object.off('change',this._changeListener)\n                \n                this._object = Noodl.Object.get(value);\n                this._changeListener = (name,value) => {\n                    const _o = {}\n                    _o[name] = value;\n                    this.setOutputs(_o)\n                }\n                this._object.on('change',this._changeListener)\n\n                this.setOutputs(this._object.data);\n                this.sendSignalOnOutput('Fetched');\n            }\n        },\n        initialize:function() {\n\n        }\n    }\n\n    for(var key in def.properties) {\n        _def.inputs[key] = def.properties[key];\n        _def.outputs[key] = def.properties[key];\n        _def.changed[key] = (function() { const _key = key; return function(value) {\n            if(!this._object) return;\n            this._object.set(_key,value);\n        }})()\n    }\n \n    return Noodl.defineNode(_def);\n}\n\nNoodl.defineReactNode = function(def) {\n    var _def = Noodl.defineNode(def);\n\n    _def.node.getReactComponent = def.getReactComponent;\n    _def.node.inputProps = def.inputProps;\n    _def.node.inputCss = def.inputCss;\n    _def.node.outputProps = def.outputProps;\n    _def.node.setup = def.setup;\n    _def.node.frame = def.frame;\n\n    return _def.node;\n}\n\nmodule.exports = Noodl;","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":root,\\n:host {\\n  --ol-background-color: white;\\n  --ol-accent-background-color: #F5F5F5;\\n  --ol-subtle-background-color: rgba(128, 128, 128, 0.25);\\n  --ol-partial-background-color: rgba(255, 255, 255, 0.75);\\n  --ol-foreground-color: #333333;\\n  --ol-subtle-foreground-color: #666666;\\n  --ol-brand-color: #00AAFF;\\n}\\n\\n.ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 1.5px solid var(--ol-background-color);\\n  background-color: var(--ol-partial-background-color);\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: var(--ol-partial-background-color);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line-inner {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  border-top: none;\\n  color: var(--ol-foreground-color);\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n\\n.ol-scale-bar-inner {\\n  display: flex;\\n}\\n\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: var(--ol-foreground-color);\\n  float: right;\\n  z-index: 10;\\n}\\n\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 10px;\\n  z-index: 11;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 12px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-index: 9;\\n  box-sizing: border-box;\\n  border: 1px solid var(--ol-foreground-color);\\n}\\n\\n.ol-scale-singlebar-even {\\n  background-color: var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-scale-singlebar-odd {\\n  background-color: var(--ol-background-color);\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n\\n.ol-viewport,\\n.ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n.ol-viewport canvas {\\n  all: unset;\\n  overflow: hidden;\\n}\\n\\n.ol-viewport {\\n  touch-action: pan-x pan-y;\\n}\\n\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  user-select: text;\\n}\\n\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n\\n.ol-control {\\n  position: absolute;\\n  background-color: var(--ol-subtle-background-color);\\n  border-radius: 4px;\\n}\\n\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: var(--ol-subtle-foreground-color);\\n  font-weight: bold;\\n  text-decoration: none;\\n  font-size: inherit;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: var(--ol-background-color);\\n  border: none;\\n  border-radius: 2px;\\n}\\n\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  will-change: transform;\\n}\\n\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  outline: 1px solid var(--ol-subtle-foreground-color);\\n  color: var(--ol-foreground-color);\\n}\\n\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n  display: flex;\\n  flex-flow: row-reverse;\\n  align-items: center;\\n}\\n\\n.ol-attribution a {\\n  color: var(--ol-subtle-foreground-color);\\n  text-decoration: none;\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 1px .5em;\\n  color: var(--ol-foreground-color);\\n  text-shadow: 0 0 2px var(--ol-background-color);\\n  font-size: 12px;\\n}\\n\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n}\\n\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n\\n.ol-attribution button {\\n  flex-shrink: 0;\\n}\\n\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n\\n.ol-attribution:not(.ol-collapsed) {\\n  background: var(--ol-partial-background-color);\\n}\\n\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n}\\n\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: block;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  height: 150px;\\n  width: 150px;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) button {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n}\\n\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: var(--ol-subtle-background-color);\\n}\\n\\n.ol-overviewmap-box {\\n  border: 1.5px dotted var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\\n.ol-overviewmap .ol-viewport:hover {\\n  cursor: pointer;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        (evt) => {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8ClampedArray(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    let dataR, dataU;\n\n    const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n    const reprojs = Math.ceil(bytesPerPixel / 3);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n        const buffer = dataSource.data;\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n        const context = createCanvasContext2D(width, height, canvasPool);\n        const imageData = context.createImageData(width, height);\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let j = 0, len = data.length; j < len; j += 4) {\n          data[j] = buffer[offset];\n          data[j + 1] = buffer[offset + 1];\n          data[j + 2] = buffer[offset + 2];\n          data[j + 3] = 255;\n          offset += bytesPerPixel;\n        }\n        context.putImageData(imageData, 0, 0);\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          image: context.canvas,\n        });\n      }\n\n      const canvas = renderReprojected(\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        false,\n        false,\n        false,\n      );\n\n      for (let i = 0, len = sources.length; i < len; ++i) {\n        const canvas = sources[i].image;\n        const context = canvas.getContext('2d');\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n      }\n\n      const context = canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      releaseCanvas(context);\n      canvasPool.push(canvas);\n\n      if (!dataR) {\n        dataU = new Uint8ClampedArray(\n          bytesPerPixel * imageData.width * imageData.height,\n        );\n        dataR = new dataSources[0].dataType(dataU.buffer);\n      }\n\n      const data = imageData.data;\n      let offset = reproj * 3;\n      for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] === 255) {\n          dataU[offset] = data[i];\n          dataU[offset + 1] = data[i + 1];\n          dataU[offset + 2] = data[i + 2];\n        } else {\n          dataU[offset] = 0;\n          dataU[offset + 1] = 0;\n          dataU[offset + 2] = 0;\n        }\n        offset += bytesPerPixel;\n      }\n    }\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [\n      Math.round(targetWidth * this.pixelRatio_),\n      Math.round(targetHeight * this.pixelRatio_),\n    ];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      this.renderComplete = false;\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = (map, frameState) => {\n      const tileSourceKey = getUid(tileSource);\n      const wantedTiles = frameState.wantedTiles[tileSourceKey];\n      const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n      this.updateCacheSize(tilesCount);\n      this.tileCache_.expireCache();\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @override\n   */\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   * @override\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @override\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      const tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n\n    let tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @override\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","import React, { useEffect, useRef } from 'react';\r\nimport 'ol/ol.css';\r\nimport { Map, View } from 'ol';\r\nimport { fromLonLat, toLonLat } from 'ol/proj';\r\nimport { Tile as TileLayer } from 'ol/layer';\r\nimport OSM from 'ol/source/OSM';\r\nimport { Feature } from 'ol';\r\nimport Point from 'ol/geom/Point';\r\nimport { Vector as VectorLayer } from 'ol/layer';\r\nimport { Vector as VectorSource } from 'ol/source';\r\nimport { Style, Icon, Text, Fill, Stroke } from 'ol/style';\r\nimport Overlay from 'ol/Overlay';\r\nimport { LineString } from 'ol/geom';\r\n\r\n\r\nconst OpenLayersMap = (props) => {\r\n  const mapRef = useRef();\r\n  const popupRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const view = new View({\r\n      center: fromLonLat([props.longitude, props.latitude]),\r\n      zoom: props.zoom,\r\n    });\r\n    const map = new Map({\r\n      target: mapRef.current,\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM(),\r\n        }),\r\n      ],\r\n      view: view,\r\n    });\r\n\r\n    const toggleInteractions = (enable) => {\r\n      if (enable) {\r\n        map.getInteractions().forEach((interaction) => {\r\n          interaction.setActive(true);\r\n        });\r\n      } else {\r\n        map.getInteractions().forEach((interaction) => {\r\n          interaction.setActive(false);\r\n        });\r\n      }\r\n    };\r\n\r\n    toggleInteractions(props.isInteractive);\r\n\r\n    const vectorSource = new VectorSource();\r\n    const vectorLayer = new VectorLayer({\r\n      source: vectorSource,\r\n    });\r\n    map.addLayer(vectorLayer);\r\n\r\n    // Overlay for pin descriptions\r\n    const overlay = new Overlay({\r\n      element: popupRef.current,\r\n      positioning: 'bottom-center',\r\n      stopEvent: false,\r\n      offset: [0, -50],\r\n    });\r\n    map.addOverlay(overlay);\r\n\r\n    if (props.pins) {\r\n      props.pins.forEach((pin) => {\r\n        const feature = new Feature({\r\n          geometry: new Point(fromLonLat([pin.longitude, pin.latitude])),\r\n          label: pin.label,\r\n          description: pin.description,\r\n          data: pin,\r\n        });\r\n\r\n        feature.setStyle(\r\n          new Style({\r\n            image: new Icon({\r\n              anchor: [0.5, 1],\r\n              src: 'https://openlayers.org/en/v4.6.5/examples/data/icon.png', // Replace with the path to your pin icon\r\n            }),\r\n            text: new Text({\r\n              text: pin.label,\r\n              offsetY: -25,\r\n              fill: new Fill({\r\n                color: '#000',\r\n              }),\r\n              stroke: new Stroke({\r\n                color: '#fff',\r\n                width: 2,\r\n              }),\r\n            }),\r\n          })\r\n        );\r\n\r\n        vectorSource.addFeature(feature);\r\n\r\n        // Hover and click events\r\n        map.on('pointermove', (evt) => {\r\n          if (map.hasFeatureAtPixel(evt.pixel)) {\r\n            const hoveredFeature = map.getFeaturesAtPixel(evt.pixel)[0];\r\n            if (hoveredFeature) {\r\n              const coordinates = hoveredFeature.getGeometry().getCoordinates();\r\n              popupRef.current.innerHTML = hoveredFeature.get('description');\r\n              overlay.setPosition(coordinates);\r\n            }\r\n          } else {\r\n            popupRef.current.innerHTML = ''; // Hide description when not hovering\r\n            overlay.setPosition(undefined);\r\n          }\r\n        });\r\n\r\n        map.on('click', (evt) => {\r\n          if (map.hasFeatureAtPixel(evt.pixel)) {\r\n            const clickedFeature = map.getFeaturesAtPixel(evt.pixel)[0];\r\n            if (clickedFeature) {\r\n              props.onPinClicked(clickedFeature.get('data'));\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n\r\n    map.getView().on('moveend', () => {\r\n      const view = map.getView();\r\n      const newZoom = view.getZoom();\r\n      const newCenter = toLonLat(view.getCenter());\r\n      props.onViewChange({\r\n        longitude: newCenter[0],\r\n        latitude: newCenter[1],\r\n        zoom: newZoom,\r\n      });\r\n    });\r\n\r\n    view.on('change:center', () => {\r\n      const newCenter = toLonLat(view.getCenter());\r\n      const newZoom = view.getZoom();\r\n      props.onViewChange({\r\n        longitude: newCenter[0],\r\n        latitude: newCenter[1],\r\n        zoom: newZoom,\r\n      });\r\n    });\r\n\r\n    view.on('change:resolution', () => {\r\n      const newCenter = toLonLat(view.getCenter());\r\n      const newZoom = view.getZoom();\r\n      props.onViewChange({\r\n        longitude: newCenter[0],\r\n        latitude: newCenter[1],\r\n        zoom: newZoom,\r\n      });\r\n    });\r\n\r\n    map.on('singleclick', (evt) => {\r\n      if (!map.hasFeatureAtPixel(evt.pixel)) {\r\n        const [lon, lat] = toLonLat(evt.coordinate);\r\n        props.onMapClick({ longitude: lon, latitude: lat });\r\n      }\r\n    });\r\n\r\n    // Fetching the route from OSRM API\r\n    const fetchRoute = async (start, end) => {\r\n      const response = await fetch(\r\n        `http://router.project-osrm.org/route/v1/driving/${start[0]},${start[1]};${end[0]},${end[1]}?overview=full&geometries=geojson`\r\n      );\r\n      const data = await response.json();\r\n      const routeCoordinates = data.routes[0].geometry.coordinates.map((coord) =>\r\n        fromLonLat(coord)\r\n      );\r\n\r\n      // Creating the route line and adding it to the map\r\n      const routeFeature = new Feature({\r\n        geometry: new LineString(routeCoordinates),\r\n      });\r\n      routeFeature.setStyle(\r\n        new Style({\r\n          stroke: new Stroke({\r\n            color: '#ff0000',\r\n            width: 4,\r\n          }),\r\n        })\r\n      );\r\n\r\n      vectorSource.addFeature(routeFeature);\r\n    };\r\n\r\n    if (props.pointA && props.pointB) {\r\n      const start = [props.pointA.longitude, props.pointA.latitude];\r\n      const end = [props.pointB.longitude, props.pointB.latitude];\r\n      fetchRoute(start, end);\r\n    }\r\n\r\n    return () => map.setTarget(null); // Cleanup map on component unmount\r\n  }, [props]);\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100%' }}>\r\n      <div ref={mapRef} style={{ width: '100%', height: '500px' }}></div>\r\n      <div ref={popupRef} className=\"ol-popup\" style={{ position: 'absolute', backgroundColor: 'white', padding: '5px', borderRadius: '5px' }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenLayersMap;\r\n"],"sourceRoot":""}